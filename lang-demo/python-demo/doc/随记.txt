概述
    Python是解释型语言
    Python是动态强类型语言
基础
    数据类型 
        数字（Number）：int，float，complex（复数），bool。
        字符串（String）
        列表（List）
        元组（Tuple）
        集合（Set）
        字典（Dictionary）
        参见python-demo/src/main
    流程控制
        参见python-demo/src/main
    函数 
        参见python-demo/src/main
    异常
        参见python-demo/src/main
    模块
        参见python-demo/src/main
    包 
        参见python-demo/src/main
    类
        参见python-demo/src/main
    对象
        参见python-demo/src/main
    继承 
        参见python-demo/src/main
    多态
        参见python-demo/src/main
进阶
    多线程
        参见python-demo/src/main
环境
    Python 3.10.4
        Windows 11
            安装软件
                略
            环境变量
                更新或追加（如果没有的话）
                    PYTHON_HOME
                        C:\Users\Administrator\AppData\Local\Programs\Python\Python312
                    PATH
                        %PYTHON_HOME%
                        %PYTHON_HOME%\Scripts
        Ubuntu 20.04.6 LTS
            前置依赖
                sudo apt update
                sudo apt-get install -y gcc make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev
            准备文件
                sudo mkdir /opt/module/python
                sudo chown -R sxydh:sxydh /opt/module/python
                wget -P /opt/module/python https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tgz
                tar -zxvf /opt/module/python/Python-3.10.4.tgz -C /opt/module/python/
            编译安装
                sudo mkdir /usr/local/python3104
                sudo chown -R sxydh:sxydh /usr/local/python3104
                cd /opt/module/python/Python-3.10.4
                ./configure --prefix=/usr/local/python3104
                make
                make install
            创建软连接（或者配置环境变量，二选一即可）
                sudo rm -f /usr/bin/python
                sudo ln -s /usr/local/python3104/bin/python3.10 /usr/bin/python
                sudo chown sxydh:sxydh /usr/bin/python
                
                sudo rm -f /usr/bin/pip
                sudo ln -s /usr/local/python3104/bin/pip3.10 /usr/bin/pip
                sudo chown sxydh:sxydh /usr/bin/pip
            验证安装
                python --version
    依赖仓库
        PyPI
            正式环境
                https://pypi.org/
            测试环境
                https://test.pypi.org/
                    前置条件
                        Windows 11
                        m-pyutil
                    开始（ https://blog.csdn.net/yifengchaoran/article/details/113447773 ）
                        pip install --upgrade -i https://pypi.tuna.tsinghua.edu.cn/simple setuptools wheel
                        pip install --upgrade -i https://pypi.tuna.tsinghua.edu.cn/simple twine
                            安装 twine 软件，用于上传分发文件。
                            
                        rmdir build dist m_pyutil.egg-info /s /q
                        python setup.py sdist bdist_wheel
                            sdist ：源代码分发（ Source Distribution ），创建一个包含项目源代码的压缩包。
                            bdist_wheel ：二进制分发（ Binary Distribution Wheel ），创建一个 whl 二进制包文件，可以被快速安装。
                            
                                此时可以通过 pip install <file_name.whl> 来安装使用二进制分法包文件
                                
                        python -m twine upload --repository testpypi dist/*
                            -m ：以模块的方式运行后面的命令，模块运行方式允许你执行一个模块中的主函数。
                            
                            上传分发文件到测试环境
                            
                            验证：
                                pip install -i https://test.pypi.org/simple/ "m_pyutil[mip]==1.9.0"
                                
                        python -m twine upload dist/*
                            上传分发文件到正式环境
                            
                            验证：
                                pip install "m_pyutil[mip]==1.9.0"
    包管理器
        pip
            指定源
                pip install -i https://pypi.tuna.tsinghua.edu.cn/simple <包名称>
        Anaconda
    虚拟环境
        venv
        virtualenv
    开发工具
        PyCharm
            生成依赖清单
                Tools
                    Sync python requirements
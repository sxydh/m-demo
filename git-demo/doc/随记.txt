开始
    config
        添加
            git config --global user.name "sxydh"
            git config --global user.email "sxydhgg@gmail.com"
            git config --global http.proxy http://127.0.0.1:10809
            git config --global https.proxy http://127.0.0.1:10809
        列表
            git config --list
        详情
            git config --show-origin --get-regexp credential.helper
                查看配置项 credential.helper 的文件位置
        认证
            git config --global credential.helper store
                避免每次输入密码或凭证，如果该方式无效，需要修改以下文件：
                    <git_installed_dir>/etc/gitconfig
                        更新
                            [credential]
                            	helper = store
    remote
        添加
            git remote add origin https://github.com/sxydh/sshtunnel.git
                add ：表明要添加远程仓库。
                origin ：远程仓库的默认名称。
        删除
            git remote remove origin
                remove ：表明要删除远程仓库。
                origin ：远程仓库的默认名称。
    branch
        列表
            git branch -a
        新建
            git branch <branch_name>
        切换
            git checkout <target_branch_name>
    add
        添加
            git add -f <folder_name>/*
    stage
        列表
            git diff --staged
    stash
        列表
            git stash list
        检出
            git stash pop
    push
        推送
            git push --set-upstream origin master
                --set-upstream ：用于设置本地分支与远程分支的上游关系。
                origin ：远程仓库的名称。
                master ：远程仓库的分支。
            git push origin <local_branch>:<remote_branch>
                origin ：远程仓库的名称。
    revert
        还原
            git revert <commit_hash>
                还原指定 commit 的修改，并将还原后的内容新建一个提交。
                如果指定 commit 的修改在后续的历史提交中，也产生了修改，不建议使用该命令，因为会产生冲突。
                
    reset
        回退
            git reset <commit_hash>
                回退到指定的 commit 版本
                默认是 mixed 模式，只会改变 index 的状态，不会改变现有 working tree 的内容。
                    即 index 已经回退到指定的 commit 版本，但是该版本之后的 commit 的改动会以未提交的形式保留在 working tree 中。
                    执行该命令后，可以丢弃未提交的内容，此时 working tree 就可以回退到指定的 commit 版本。
                
    clean
        清理
            git clean -dfX
                -d ：删除目录。
                -f ：强制删除。
                -X ：删除所有未跟踪文件，但保留目录。
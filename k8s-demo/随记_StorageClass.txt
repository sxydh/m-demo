概述
    https://blog.csdn.net/weixin_41947378/article/details/111509849
    StorageClass 可以帮助用户自动创建 PV ，以满足 PVC 的请求。
    StorageClass 包含存储制备器 Provisioner ，用来决定使用哪个卷插件制备 PV 。
    K8s 内置了多种存储制备器：
        AzureFile
        PortworxVolume
        ...
环境
    NFS 制备器
        前置条件
            K8s 集群
                Master
                    hadoop01 192.168.233.129
                Node
                    hadoop02 192.168.233.130
                    hadoop03 192.168.233.131
            NFS 服务端（ hadoop01 ）
                参考 m-demo/nfs-demo/doc/随记.txt
            NFS 客户端（ hadoop01, hadoop02, hadoop03 ）
                参考 m-demo/nfs-demo/doc/随记.txt
            用户权限
                sudo su
        创建 Provisioner
            helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/
            helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \
                --set nfs.server=192.168.233.129 \
                --set nfs.path=/opt/module/nfs/data/shared
        创建 StorageClass
            vim sc_nfs_demo.yaml
                追加
                    # https://kubernetes.io/docs/concepts/storage/storage-classes/#nfs
                    apiVersion: storage.k8s.io/v1
                    kind: StorageClass
                    metadata:
                      name: sc-nfs-demo
                    provisioner: cluster.local/nfs-subdir-external-provisioner
                    parameters:
                      server: 192.168.233.129
                      path: /opt/module/nfs/data/shared
                      readOnly: "false"
            kubectl create -f sc_nfs_demo.yaml -n default
            kubectl get sc -o wide -n default
            kubectl describe sc sc-nfs-demo
        验证 StorageClass
            创建 PVC
                vim pvc_tomcat_demo.yaml
                    追加
                        apiVersion: v1
                        kind: PersistentVolumeClaim
                        metadata:
                          name: pvc-tomcat-demo
                        spec:
                          accessModes:
                            - ReadWriteMany
                          resources:
                            requests:
                              storage: 1Gi
                          storageClassName: sc-nfs-demo
                kubectl create -f pvc_tomcat_demo.yaml -n default
                kubectl get pvc -o wide -n default
                kubectl describe pvc pvc-tomcat-demo -n default
                kubectl delete pvc pvc-tomcat-demo -n default
            创建 Pod
                vim pod_tomcat_demo.yaml
                    追加
                        apiVersion: v1
                        kind: Pod
                        metadata:
                          name: pod-tomcat-demo
                        spec:
                          containers:
                          - name: container-tomcat-demo
                            image: tomcat
                            ports:
                            - containerPort: 8080
                            volumeMounts:
                            - mountPath: "/usr/local/tomcat/webapps"
                              name: tomcat-volume
                          volumes:
                          - name: tomcat-volume
                            persistentVolumeClaim:
                              claimName: pvc-tomcat-demo
                kubectl create -f pod_tomcat_demo.yaml -n default
                kubectl get pod -o wide -n default
                kubectl describe pod pod-tomcat-demo -n default
                kubectl delete pod pod-tomcat-demo -n default
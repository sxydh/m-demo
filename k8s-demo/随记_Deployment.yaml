# 配置 Kubernetes API 的版本，用于确定 YAML 文件的结构和验证。
apiVersion: apps/v1
# 配置 Kubernetes 资源对象的类型
kind: Deployment
# 配置 Deployment 对象的元数据
metadata:
  # 对象的名称
  name: app-demo
  # 对象的命名空间
  namespace: default
  # 对象的标签，以用于选择器匹配。
  labels:
    app: app-demo
# 配置 Deployment 规格和行为
spec:
  # 配置 Pod 副本数量
  replicas: 3
  # 配置 Pod 选择器
  selector:
    # 根据标签选择 Pod
    matchLabels:
      app: app-demo
  # 配置 Pod 更新策略
  strategy:
    # 更新类型
    type: RollingUpdate
    # 滚动更新
    rollingUpdate:
      # 最大额外 Pod 数量
      maxSurge: 1
      # 最大不可用 Pod 数量
      maxUnavailable: 1
  # 配置 Pod 模板
  template:
    # 配置模板元数据
    metadata:
      # 模板标签，以用于选择器匹配。
      labels:
        app: app-demo
    # 配置模板规格和行为
    spec:
      # 配置存储卷
      volumes:
      - name: volume-demo
        configMap:
          # 引用的 ConfigMap 名称
          name: configmap-demo
      # 配置容器
      containers:
      - name: container-demo
        # 容器镜像
        image: image-demo:latest
        ports:
        # 容器内部端口
        - containerPort: 80
        # 容器资源
        resources:
          # 资源需求
          requests:
            cpu: "100m"
            memory: "200Mi"
          # 资源限制
          limits:
            cpu: "500m"
            memory: "500Mi"
        # 容器内部环境变量
        env:
        - name: ENV_VAR_NAME
          value: "env_var_value"
        # 容器内部环境变量导入，可以是 ConfigMap 、 Secret 等。
        envFrom:
        - configMapRef:
            name: configmap-demo
        # 容器挂载卷
        volumeMounts:
        - mountPath: "/path/to/file"
          # 引用的 volume 名称
          name: volume-demo
        # 容器存活探针
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        # 容器就绪探针
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
  # 配置旧版本保留数量
  revisionHistoryLimit: 10
  # 配置部署超时时间
  progressDeadlineSeconds: 600
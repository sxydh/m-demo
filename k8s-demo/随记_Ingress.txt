概述
    Ingress 用于将外部流量根据规则路由到合适的 Service
    Ingress 组件包含 Ingress 、 Reverse Proxy 、 Ingress Controller 。
        Ingress 是路由规则对象
        Reverse Proxy 负责流量路由，支持多种实现，例如 Nginx 等。
        Ingress Controller 负责感知路由规则的变化，并动态应用到 Reverse Proxy 。
环境
    前置条件
        K8s v1.23.17
            Kubernetes Master
                hadoop01 192.168.233.129
            Kubernetes Node
                hadoop02 192.168.233.130
                hadoop03 192.168.233.131
        Helm
            hadoop01 192.168.233.129
        权限
            sudo su
    安装 Ingress Controller （ https://kubernetes.github.io/ingress-nginx/deploy/#quick-start ）
        mkdir -p /opt/module/tmp
        cd /opt/module/tmp
        kubectl create namespace ingress-nginx
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm install ingress-nginx ingress-nginx/ingress-nginx -n ingress-nginx
            helm uninstall ingress-nginx -n ingress-nginx

        kubectl get pod -o wide -n ingress-nginx
        kubectl get pod -n ingress-nginx | grep ingress-nginx | awk '{print $1}' | xargs kubectl describe pod -n ingress-nginx
        kubectl get pod -n ingress-nginx | grep ingress-nginx | awk '{print $1}' | xargs kubectl logs -n ingress-nginx
        POD_NAME=$(kubectl get pod -n ingress-nginx | grep ingress-nginx | awk 'NR==1 {print $1}') && kubectl exec -it "$POD_NAME" -n ingress-nginx -- bash

        kubectl get service -o wide -n ingress-nginx
    创建 Deployment
        mkdir -p /opt/module/tmp
        cd /opt/module/tmp
        vim deployment_tomcat_demo.yaml
            追加
                apiVersion: apps/v1
                kind: Deployment
                metadata:
                  name: deployment-tomcat-demo
                  labels:
                    app: deployment-tomcat-demo
                spec:
                  replicas: 1
                  selector:
                    matchLabels:
                      app: pod-tomcat-demo
                  template:
                    metadata:
                      name: pod-tomcat-demo
                      labels:
                        app: pod-tomcat-demo
                    spec:
                      containers:
                      - name: container-tomcat-demo
                        image: tomcat
                        ports:
                        - containerPort: 8080
        kubectl create -f deployment_tomcat_demo.yaml -n default
        kubectl get deployment -o wide -n default

        kubectl get pod -o wide -n default
        kubectl describe pod pod-tomcat-demo -n default
        kubectl logs pod-tomcat-demo -n default
        kubectl exec -it pod-tomcat-demo -- bash -n default

        kubectl edit deployment deployment-tomcat-demo -n default
        kubectl delete deployment deployment-tomcat-demo -n default
    创建 Service
        mkdir -p /opt/module/tmp
        cd /opt/module/tmp
        vim service_tomcat_demo.yaml
            追加
                apiVersion: v1
                kind: Service
                metadata:
                  name: service-tomcat-demo
                spec:
                  selector:
                    app: pod-tomcat-demo
                  ports:
                    - protocol: TCP
                      port: 80
                      targetPort: 8080
                  type: ClusterIP
        kubectl create -f service_tomcat_demo.yaml -n default
        kubectl get service -o wide -n default
        kubectl describe service service-tomcat-demo -n default

        kubectl edit service service-tomcat-demo -n default
        kubectl delete service service-tomcat-demo -n default
    创建 Ingress
        mkdir -p /opt/module/tmp
        cd /opt/module/tmp
        vim ingress_demo.yaml
            追加
                apiVersion: networking.k8s.io/v1
                kind: Ingress
                metadata:
                  name: ingress-demo
                  annotations:
                    nginx.ingress.kubernetes.io/rewrite-target: /
                spec:
                  rules:
                  - http:
                      paths:
                      - path: /tomcat-demo
                        pathType: Prefix
                        backend:
                          service:
                            name: service-tomcat-demo
                            port:
                              number: 80
        kubectl create -f ingress_demo.yaml -n default
        kubectl get ingress -o wide -n default
        kubectl describe ingress ingress-demo -n default

        kubectl edit ingress ingress-demo -n default